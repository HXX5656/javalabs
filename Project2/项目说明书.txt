设计：
代码包：core、client、server。
client包：
        Main类（主要用于游戏的开始与串联）
        Mymenubar类（主要用于做menu）
core包（核心代码）：
        两个枚举变量Icon，Direction，前者用于主题图片切换，分类分种、后者用于人物移动的方向。
        一个接口HasEvent，用来解决触发事件。
        一个Action的栈，主要用来解决后退和足迹问题。
        一个Player的类：主要用来记录玩家信息，以及展示玩家信息。
        一个Map类：这是最主要的类，对应迷宫的一个个小格子，有两个内部类Monster，Treasure。这两个内部类都实现了HasEvent接口，当任务移动到这两类对象所在的格子里会触发事件。Map类实现了迷宫的随机生成以及怪物的攻防模式设计，并将宝物的拾取与人的攻防、血量联系起来。
server包：
       Server类：主要用于上面两个包之间的交互，处理玩家操作等。
迷宫界面构成：
主面板：VBox root：三个节点Mymenubar、VBox flood（显示玩家的血量以及攻防）、GridPane map（显示迷宫的地图）
迷宫游戏实现：
调用顺序：
首先Main类的start方法建一个Server对象、在Server的构造方法里new一个Player，与此同时，Main类首先显示主面板，面板上有选择关卡的按钮，玩家点击按钮后，调用showStory方法和setSection方法，展示故事背景、改变类变量section（第几关），然后调用server的creaGame方法得到迷宫地图（创建Map对象以及内部类对象怪物和宝物）、再使用Main类的图片处理方法通过Icon变量对节点map进行修饰。之后通过addKeyControls方法实现键盘与界面的交互。
在处理过程中server对玩家是否通关进行判断，若通关就会弹出界面说明以及询问玩家是否想要进入下一关。若是，就调用Main类的setSection方法进入下一关。
javafx的界面处理细节：
Main类里写了updateGameView的方法，实现玩家与界面交互。Main里的类变量mediaPlayer和Media是用来放每一关的背景音乐的，同时在某些触发事件产生时：如胜利、失败等都会有特别的音效。Menu的使用使得界面更加简洁明了、使得游戏逻辑更清晰。每一个menu都对应一种功能，使得游戏体验更加高效。而flood节点用来显示人物战斗状态，随着键盘操作更新，让玩家更了解自身情况。
功能：
       必做功能:(全)：地图设计、人物移动（wasd）、人物碰到怪物掉血至死亡、怪物自动独立移动、拾取宝箱、攻击怪物（k）、实现足迹、后退（b）、进入下一层迷宫及判断胜利、查看玩家信息、查看帮助信息、实现沙盒模式、UI美观、音效（游戏背景乐、攻击、拾取、胜利、失败音效）、排行榜、文档。
       加分功能：
       1.迷宫随机生成（采用递归的方法使用最小生成树算法实现了迷宫的随机生成、起始点间只有一条通路）
       2.怪物与玩家间的攻防模式设计：A攻击B时，首先对A的攻击力和B的防御力相比较，前者较大，每次攻击造成的伤害就是两者差值，反之，每次攻击只造成一点伤害。怪物死亡掉落宝物，宝物有平均的概率加2滴血、加1攻击力、加1防御力。
       3.故事背景：以精灵为载体的故事背景串联四关。精灵大陆由四个部落组成：水、火、星、雪。
精灵们已经在这片大陆上生存了许久，过着安静祥和的生活。
可是突然有一天，大陆上出现了许多暗黑精灵，他们用暗黑力量吞噬了这片大陆并在大陆上堆叠了四层迷宫以迷惑外人，从而阻止其它大陆人前来救援。玩家每一关都会得到一个精灵王指引。
      4.切换主题：Menubar里的theme按钮下有5个主题，按下立马就可以切换迷宫地图的主题。这是因为按钮会触发事件，自动更新以及改变图片种类源。
      5.存档读档：直接通过io读写来存读对象。因为对象是引用类型，因此我采用了深拷贝的方法（将对象先写进字节流里，再读出）。因此我将存储对象所在的类都实现了可序列化的接口。
使用：
      安装：双击jar包即可。